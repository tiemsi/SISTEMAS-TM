//eval(function(p,a,c,k,e,d){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--){d[e(c)]=k[c]||e(c)}k=[function(e){return d[e]}];e=function(){return'\\w+'};c=1};while(c--){if(k[c]){p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c])}}return p}('$.14.10=7(w){b 8=$.14.10;8.o=[];8.w={};8.c={1b:\'8-1k-1h\',H:\'8-1d\',K:\'8-1e\'};5($.X.11){r=\'11\'}g{r=\'C\'};5($.X.J){u=\'J\'}g{u=\'C\'};8.16={F:l,y:-1,z:-1,1f:\'1g\',V:1j,S:{N:\'1i\'},18:1c,R:r,Q:{N:\'L\',1l:\'L\'},T:19,U:u,M:l,Z:7(){},W:7(){}};b o=$.1a({},8.16,w);5(!o.h){o.h=$(\'d:A 9:A\',1).j()}g{$(\'d 9\',1).j(o.h)}1.q(7(){b E=$(\'9:1p(d)\',1);E.q(7(){5(o.M){$(\'>a\',1).1z(\'<G 1y="\'+8.c.K+\'"></G>\')}$(1).i(8.c.H)});$(\'d\',1).Y({1w:\'1A\',1B:\'1D\'});5(o.F){b O=$(\'d\',1);O.q(7(){b n=$(\'>9:1C(.1v)\',1).P;5(n>=o.y){5(n>=o.z){$(1).j(3*o.h).i(\'D 1m\')}g{$(1).j(2*o.h).i(\'D 1n\')}}})}b 1q=1,p=1r;7 k(e){5(e.x.v()==\'9\'){b 4=$(\'> d\',e);f 4.P?4[0]:1t}g{f e}}7 13(e){5(e.x.v()==\'d\'){f $(e).1s(\'9\')[0]}g{f e}}7 B(){b 4=k(1);5(!4)f;$.m(4,\'s\',1u);1o(7(){5(!$.m(4,\'s\')){$(4).15(o.Q,o.T,o.U,7(){o.W.17(4)})}},o.V)}7 I(){b 4=k(1);5(!4)f;$.m(4,\'s\',l);$(4).Y({p:p++}).15(o.S,o.18,o.R,7(){o.Z.17(4)});5(1.x.v()==\'d\'){b 9=13(1);$(9).i(\'t\');$(\'> a\',9).i(\'t\')}}$(\'9\',1).1x().t(I,B)})};',62,102,'|this|||submenu|if||function|sf|li||var||ul|ele|return|else|sooperfishWidth|addClass|width|getSubmenu|true|data|ulsize||zIndex|each|sooperEasingShow|cancelHide|hover|sooperEasingHide|toLowerCase|op|nodeName|dualColumn|tripleColumn|first|hideSooperfishUl|linear|multicolumn|parentLi|multiColumn|span|isParent|showSooperfishUl|easeInTurbo|arrowClass|hide|autoArrows|height|uls|length|animationHide|easingShow|animationShow|speedHide|easingHide|delay|onHide|easing|css|onShow|sooperfish|easeOutOvershoot||getActuator|fn|animate|defaults|call|speedShow|200|extend|menuClass|600|parent|arrow|hoverClass|sfHover|enabled|show|500|js|opacity|triplecolumn|dualcolumn|setTimeout|has|root|1000|parents|null|false|backLava|left|unbind|class|append|auto|display|not|none'.split('|'),0,{}))

/*
 * SooperFish 0.3
 * (c) 2010+ Jurriaan Roelofs - SooperThemes.com
 * Inspired by Suckerfish, Superfish and Droppy
 * Licensed GPL: http://www.gnu.org/licenses/gpl.html
 */
$.fn.sooperfish = function (op) {

	var sf = $.fn.sooperfish;
	sf.o = [];
	sf.op = {};
	sf.c = {
		menuClass: 'sf-js-enabled',
		isParent: 'sf-parent',
		arrowClass: 'sf-arrow'
	};
	if ($.easing.easeOutOvershoot) { //set default easing
		sooperEasingShow = 'easeOutOvershoot';
	} else {
		sooperEasingShow = 'linear';
	};
	if ($.easing.easeInTurbo) {
		sooperEasingHide = 'easeInTurbo';
	} else {
		sooperEasingHide = 'linear';
	};
	sf.defaults = {
		multiColumn: false,
		dualColumn: 6, //if a submenu has at least this many items it will be divided in 2 columns
		tripleColumn: 12, //if a submenu has at least this many items it will be divided in 3 columns
		hoverClass: 'sfHover',
		delay: 0, //make sure menus only disappear when intended, 500ms is advised by Jacob Nielsen
		animationShow: {
			height: 'show'
		},
		speedShow: 600,
		easingShow: sooperEasingShow,
		animationHide: {
			height: 'hide',
			opacity: 'hide'
		},
		speedHide: 0,
		easingHide: sooperEasingHide,
		autoArrows: true, //Adds span elements to parent li elements, projecting arrow images on these items to indicate submenus. I added an alternative image file with white arrows.
		onShow: function () {}, //callback after showing menu
		onHide: function () {} //callback after hiding menu
	};


	//Merge default settings with o function parameter
	var o = $.extend({}, sf.defaults, op);
	if (!o.sooperfishWidth) {
		o.sooperfishWidth = $('ul:first li:first', this).width(); //if no width is set in options try to read it from DOM
	} else {
		$('ul li', this).width(o.sooperfishWidth) //if width is set in invocation make sure this width is true for all submenus
	}

	this.each(function () {

		//Check dom for submenus
		var parentLi = $('li:has(ul)', this);
		parentLi.each(function () {
			if (o.autoArrows) { //Add autoArrows if requested
				$('> a, > span', this).append('<div class="' + sf.c.arrowClass + '"></div>');
			}
			$(this).addClass(sf.c.isParent);
		});

		$('ul', this).css({
			left: 'auto',
			display: 'none'
		}); //The script needs to use display:none to make the hiding animation possible

		//Divide menu in columns
		//Set width override
		if (o.multiColumn) {
			var uls = $('ul', this);
			uls.each(function () {
				var ulsize = $('>li:not(.backLava)', this).length; //Skip list items added by Lavalamp plugin
				if (ulsize >= o.dualColumn) {
					if (ulsize >= o.tripleColumn) {
						$(this).width(3 * o.sooperfishWidth).addClass('multicolumn triplecolumn');
					} else {
						$(this).width(2 * o.sooperfishWidth).addClass('multicolumn dualcolumn');
					}
				}
			});
		}

		var root = this,
			zIndex = 1000;

		function getSubmenu(ele) {
			if (ele.nodeName.toLowerCase() == 'li') {
				var submenu = $('> ul', ele);
				return submenu.length ? submenu[0] : null;
			} else if (ele.nodeName.toLowerCase() == 'span') {
				var submenu = $(ele).parent().find('ul');
				return submenu.length ? submenu[0] : null;

			} else {
				return ele;
			}
		}

		function getActuator(ele) {
			if (ele.nodeName.toLowerCase() == 'ul') {
				return $(ele).parents('li')[0];
			} else {
				return ele;
			}
		}

		function hideSooperfishUl() {
			var submenu = getSubmenu(this);
			if (!submenu) return;
			$.data(submenu, 'cancelHide', false);
			setTimeout(function () {
				if (!$.data(submenu, 'cancelHide')) {
					if ($(submenu).is(":animated")) {
						$(submenu).stop(true, true)
					}
					$(submenu).animate(o.animationHide, o.speedHide, o.easingHide, function () {
						o.onHide.call(submenu);
						$(this).parent().removeClass('sf-open');
					});
				}
			}, o.delay);
		}

		function showSooperfishUl() {
			var submenu = getSubmenu(this);
			if (!submenu) return;
			$.data(submenu, 'cancelHide', true);
			if ($(submenu).is(":animated")) {
				$(submenu).stop(true, true)
			}
			$(submenu).css({
				zIndex: zIndex++
			}).animate(o.animationShow, o.speedShow, o.easingShow, function () {
				o.onShow.call(submenu);
				$(this).parent().addClass('sf-open');
			});
		}

		// Use click/tap on touch devices and hover on normal devices.
		if ( !! ('ontouchstart' in window) == false) {
			$('li', this).unbind().hover(showSooperfishUl, hideSooperfishUl);
		} else {
			if ($('li > span', this).length > 0) {
				$('li > span', this).unbind().toggle(showSooperfishUl, hideSooperfishUl);
			}
		}

	});

};