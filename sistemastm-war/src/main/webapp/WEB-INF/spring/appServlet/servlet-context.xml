<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:ws="http://jax-ws.dev.java.net/spring/core" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
    xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
    
    <!-- Tarea programada que ejecuta la carga de saldos vivos en HOST -->
<!-- 	<task:scheduled-tasks> -->
	<!--<task:scheduled ref="schedulerService" method="guardarSaldosPrestamos" fixed-rate="90000"/>-->
	<!--<task:scheduled ref="entidadRiesgoService" method="cargarDescGrupoBancario" fixed-rate="90000"/> --> 	
<!-- 	</task:scheduled-tasks> -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven validator="validator" />

	<!-- Enable controller method level security -->
	<security:global-method-security
		pre-post-annotations="enabled" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources location="/, classpath:/META-INF/web-resources/"
		mapping="/resources/**" />

	<!-- Allows for mapping the DispatcherServlet to "/" by forwarding static 
		resource requests to the container's default Servlet -->
	<default-servlet-handler />

	<context:component-scan base-package="es.war.sistemastm.web.controller" />
		
	<!-- register "global" interceptor beans to apply to all registered HandlerMappings -->
	<interceptors>
		<beans:bean
			class="org.springframework.web.servlet.theme.ThemeChangeInterceptor" />
		<beans:bean
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
			p:paramName="lang" />
	</interceptors>

	<!-- Resolves localized messages*.properties and application.properties 
		files in the application to allow for internationalization. The messages*.properties 
		files translate messages, the application.properties resource bundle localizes 
		all application specific messages such as entity names and menu items. -->
	<beans:bean
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		id="messageSource" p:basenames="WEB-INF/i18n/messages,WEB-INF/i18n/application"
		p:fallbackToSystemLocale="false" />

	<!-- store preferred language configuration in a cookie -->
	<beans:bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
	           id="localeResolver" p:cookieName="locale" p:defaultLocale="en_US" />


	<!-- resolves localized <theme_name>.properties files in the classpath to 
		allow for theme support -->
	<beans:bean
		class="org.springframework.ui.context.support.ResourceBundleThemeSource"
		id="themeSource" />

	<!-- store preferred theme configuration in a cookie -->
	<!-- <beans:bean class="org.springframework.web.servlet.theme.CookieThemeResolver" 
		id="themeResolver" p:cookieName="theme" p:defaultThemeName="standard"/> -->

	<!-- Tiles Configuration -->
	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="tilesViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</beans:bean>

	<beans:bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" id="tilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/layouts/layouts.xml</beans:value>
				<!-- Scan views directory for Tiles configurations -->
				<beans:value>/WEB-INF/views/**/views.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<beans:property name="validationMessageSource" ref="messageSource" />
	</beans:bean>

	<!-- Enable file upload functionality -->
	<!-- <beans:bean class="org.springframework.web.multipart.support.StandardServletMultipartResolver" 
		id="multipartResolver"/> -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
    
    <aop:aspectj-autoproxy />
 <beans:bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
   <beans:property name="defaultErrorView" value="javaError"/>
</beans:bean>  

</beans:beans>
